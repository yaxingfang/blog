<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022实习总结</title>
    <url>/2022-internship-summary.html</url>
    <content><![CDATA[<blockquote>
<p>写在前面：作为一名硕转码的选手，今年暑期实习貌似又格外的难，身边的朋友、脉脉、牛客上的同学都表示今年大环境很差，实习很难找。各个大厂从裁员，”毕业季”，到锁 hc、停止流程、甚至主动毁约已签的 offer，无不表现出今年大环境有多差。以下是本人二月底以来找后端开发岗的暑期实习对各个公司面试流程一个大概的回顾和总结。</p>
</blockquote>
<span id="more"></span>

<h2 id="已面试"><a href="#已面试" class="headerlink" title="已面试"></a>已面试</h2><h3 id="微软"><a href="#微软" class="headerlink" title="微软"></a>微软</h3><p>3.7 一面 →  3.10 （一二面平行面，一面过直达终面） → 3.16 挂 </p>
<ul>
<li>微软很看重算法，全程无八股，做题时没有思路可以和面试官沟通，不要自己一个人硬想，微软很看重沟通能力。</li>
<li>尽量早投，微软今年暑期实习提前批差不多去年 12 月就开始了，身边有朋友提前批进的，相较于正式批而言难度感觉也没有更大，而且其实到了正式批剩余的 hc 就不多了。有朋友投简历有点晚连面试都没有安排到。</li>
</ul>
<h3 id="美团"><a href="#美团" class="headerlink" title="美团"></a>美团</h3><p>3.12 笔试（3.18 / 5） →  3.18 一面 →  3.18 挂</p>
<p>面试体验很不好（当然自己面的也不好），后续脉脉牛客上看到这个部门貌似一面挂了不少人不乏顶级 985。</p>
<h3 id="字节"><a href="#字节" class="headerlink" title="字节"></a>字节</h3><p>3.22 一面 →  3.23 二面 →  3.29 三面 →  4.2 offer审批 →  4.11 offer邮件</p>
<ul>
<li>字节比较看重基础和算法，题至少要有思路和面试官沟通，最好做出来。</li>
<li>流程很快，一面二面都是当天晚上直接通知通过，三面过后好几天等到 HR 电话，然后 offer 审批跨了清明节，然后又过了一个周末，蛮痛苦的。</li>
<li>综合而言，字节的面试体验很好，面试官会引导你去说，包括一些八股、场景题。</li>
</ul>
<h3 id="携程"><a href="#携程" class="headerlink" title="携程"></a>携程</h3><p>3.24 笔试（2.7 / 4） →  3.31 一面 →  4.13 约了二面（躺平不面了）</p>
<p>携程一面问的比较基础，算法也比较简单。</p>
<h3 id="阿里"><a href="#阿里" class="headerlink" title="阿里"></a>阿里</h3><p>3.24 初面 →  3.25 笔试（惨） →  4.7 二面 →  4.11 补笔试</p>
<p>阿里一面看基础，二面看项目，项目不太熟悉了，被拷打烂了。<br>更新：4.11 晚上临时约做题，两道，一道多线程打印数据问题、一道高并发转账接口设计问题</p>
<h3 id="恒生"><a href="#恒生" class="headerlink" title="恒生"></a>恒生</h3><p>3.31 笔试（无难度） → 4.6 一面 → 4.11 查看 已结束 → 4.12 HR 电话</p>
<p>问的偏业务，貌似一面过了，拿了字节 offer 就拒了。</p>
<h2 id="已笔试"><a href="#已笔试" class="headerlink" title="已笔试"></a>已笔试</h2><ul>
<li><p>360 3.19 笔试（1.9 / 2） </p>
</li>
<li><p>贝壳 3.21 笔试（1.6 / 3）</p>
</li>
<li><p>网易雷火 3.26 笔试（1.5 / 2）</p>
</li>
<li><p>网易互联网 3.27 笔试（AK） → 4.2 查看 笔试未通过（今年貌似很多AK的同学被笔试挂的，挺迷）</p>
</li>
<li><p>便利蜂 3.31 笔试（惨）</p>
</li>
<li><p>京东 4.2 笔试（0.7 / 2）</p>
</li>
<li><p>百度 4.12 笔试 终止流程</p>
</li>
</ul>
<h2 id="已投递简历挂"><a href="#已投递简历挂" class="headerlink" title="已投递简历挂"></a>已投递简历挂</h2><p>OPPO、网易互娱</p>
<h2 id="已投递无后续"><a href="#已投递无后续" class="headerlink" title="已投递无后续"></a>已投递无后续</h2><p>顺丰、58同城、联想、趋势科技</p>
]]></content>
      <categories>
        <category>实习秋招</category>
      </categories>
  </entry>
  <entry>
    <title>2022秋招总结</title>
    <url>/2022-autumn-recruitment-summary.html</url>
    <content><![CDATA[<p>19年乘着人见人吹的计算机大热，跨考计算机一站未果，二战上岸本校计算机。</p>
<p>研二暑期留校科研，很幸运做出来两篇文章，接下来可以去实习了。</p>
<p>从12月到2月，断断续续复习Java后端开发所需的知识。</p>
<p>从2月底找实习，4月底入职字节跳动，8月底离职返校，直到11月底（11.27）正式签订三方，过程坎坷，内心惆怅。</p>
<p>秋招投了约50家公司，都是Java后端，主要有以下：</p>
<span id="more"></span>

<p>蚂蚁，二面挂</p>
<p>中移苏研，第二批次，面试走完，没有收到体检</p>
<p>浙商银行，面试走完，没有材料审核</p>
<p>山石网科，hr面挂</p>
<p>荣耀，面试走完，口头谈薪</p>
<p>上海银行，总行苏州base，收到offer</p>
<p>苏州农行，收到体检</p>
<p>字节跳动，转正offer，sp</p>
<p>总体而言，今年强的人还是能拿到多个大厂offer，但是大厂门槛比年高了很多。在互联网颓势的今年，芯片、嵌入式成为香饽饽，薪资高、发展好，不少人甚至直呼赶紧转行（我有朋友在零基础情况下拿了五六家嵌入式中小厂的offer）。</p>
<p>关于offer选择，最终是考虑字节跳动base杭州，还有一个江苏省某地级市top1高中的信息技术老师（进编）的offer。在考虑家庭情况、个人卷度承受度、稳定性，最终选择了做一名教师。</p>
<p>未来的发展，大概率就是做一名普通的信息技术教师，有卷的心还有机会尝试加入学校带竞赛的队伍。</p>
<p>不管什么offer选择，有得必定有失，十全十美的工作几乎没有。所以在进行offer选择时，如果没有明确的爱好想做的工作的话（比如我），那就好好综合考虑以上几点进行判断得出选择了。</p>
<p>做出选择就好好冲吧，未来可期。大家都有光明的未来！</p>
]]></content>
      <categories>
        <category>实习秋招</category>
      </categories>
  </entry>
  <entry>
    <title>Typora配置阿里云OSS图床</title>
    <url>/image-host.html</url>
    <content><![CDATA[<p>在我们日常使用Typora写文档时，一般图片都是放在本地的一个相对路径下，如果将markdown文件发送给别人，那么这个文件中的图片别人自然是访问不到的。图床的作用就是把图片存在网站上，对应的图片生成一个链接，markdown文件中使用该链接访问图片。在本文中我们使用Typora + PicGo + 阿里云OSS图床实现图片自动上传并自由访问。</p>
<span id="more"></span>

<h2 id="下载-Typora"><a href="#下载-Typora" class="headerlink" title="下载 Typora"></a>下载 Typora</h2><p><a href="https://typora.io/">Typora官网</a> 官网拉到最下，点击 <a href="https://typora.io/releases/all">History Releases</a>，选择 Dev/Beta Releases，拉到最下 More Beta,</p>
<p>选择对应系统的链接 <a href="https://typora.io/windows/dev_release.html">old Windows / Linux beta</a>，<a href="https://typora.io/dev_release.html">old macOS beta</a></p>
<p>Windows x64：<a href="https://download.typora.io/windows/typora-update-x64-1016.exe">Download old version (Windows x64)</a></p>
<p>Mac OS：<a href="https://download.typora.io/mac/Typora-0.11.18.dmg">Download v0.11.18</a></p>
<h2 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h2><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><ol>
<li>打开自动保存</li>
<li>关闭自动检查更新</li>
<li>关闭发送匿名使用数据</li>
</ol>
<h3 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h3><ol>
<li><p>自定义字体</p>
</li>
<li><p>勾选侧边栏大纲视图折叠和展开</p>
</li>
<li><p>配置 Next 主题</p>
<ol>
<li><p>官网：<a href="https://theme.typora.io/theme/NexT/">https://theme.typora.io/theme/NexT/</a></p>
</li>
<li><p>下载 zip 压缩包：<a href="https://github.com/BillChen2k/typora-theme-next/releases/download/1.1.1/typora-theme-next.zip">typora-theme-next.zip</a></p>
</li>
<li><p>Typora 左上角，文件 - 偏好设置 - 外观 - 打开主题文件夹<code>xxx</code></p>
</li>
<li><p>把 typora-theme-next.zip 解压，将所有文件复制/剪切到主题文件夹<code>xxx</code>下</p>
</li>
<li><p>重启 Typora，设置外观选择Next即可</p>
</li>
<li><p>如果感觉页面宽度太小，可以打开next.css，搜索并配置max-width</p>
</li>
<li><p>如果感觉整体页面偏小，可以<code>Ctrl Shift +/-</code>增大/减小整体页面</p>
</li>
</ol>
</li>
</ol>
<h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><ol>
<li>设置默认换行符</li>
<li>取消拼写检查，勾选<code>不使用拼写检查</code></li>
</ol>
<h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><ol>
<li><p>插入图片时</p>
<p> 选择上传图片，勾选<code>对本地位置的图片应用上述规则</code>和<code>对网络位置的图片应用上述规则</code></p>
</li>
<li><p>上传服务设定</p>
<p> 接下来会具体讲到图床的配置</p>
</li>
</ol>
<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ol>
<li>勾选显示代码块行号</li>
</ol>
<h2 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h2><h3 id="1、安装PicGo"><a href="#1、安装PicGo" class="headerlink" title="1、安装PicGo"></a>1、安装PicGo</h3><p>下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>安装 PicGo-Setup-2.3.0-beta.7-ia32.exe，在PicGo中打开PicGo设置，找到设置Server，点击设置，点击开启Server，点击确定即可。</p>
<h3 id="2、配置Typora"><a href="#2、配置Typora" class="headerlink" title="2、配置Typora"></a>2、配置Typora</h3><p>文件-偏好设置-图像-设置插入图片时 上传图片-上传服务选择picgo.app，选择picgo的安装路径，验证图片上传选项</p>
<h3 id="3、阿里云OSS搭建图床"><a href="#3、阿里云OSS搭建图床" class="headerlink" title="3、阿里云OSS搭建图床"></a>3、阿里云OSS搭建图床</h3><h4 id="3-1、开通阿里云对象存储"><a href="#3-1、开通阿里云对象存储" class="headerlink" title="3.1、开通阿里云对象存储"></a>3.1、开通阿里云对象存储</h4><p>开通阿里云对象存储<a href="https://www.aliyun.com/product/oss%EF%BC%8C%E6%B3%A8%E5%86%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%B4%A6%E5%8F%B7%E5%90%8E%EF%BC%8C%E5%BC%80%E9%80%9A%E5%AF%B9%E8%B1%A1%E5%82%A8%E5%AD%98%EF%BC%8C%E8%BF%9B%E5%85%A5%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8OSS%E7%9A%84%E6%8E%A7%E5%88%B6%E5%8F%B0">https://www.aliyun.com/product/oss，注册阿里云账号后，开通对象储存，进入对象存储OSS的控制台</a></p>
<h4 id="3-2、创建bucket"><a href="#3-2、创建bucket" class="headerlink" title="3.2、创建bucket"></a>3.2、创建bucket</h4><ul>
<li><p>在左侧选择概览，然后在右侧Bucket管理中创建一个新的bucket</p>
</li>
<li><p>创建Bucket具体配置</p>
<blockquote>
<p>Bucket名字不能有大写字母、地域就近选择、存储类型选择<code>标准存储</code>，读写权限<code>公共读</code></p>
</blockquote>
</li>
<li><p>创建成功后，可以在Bucket列表中查看，记住自己的访问域名和地域节点，后面会用到。</p>
</li>
</ul>
<h4 id="3-3、创建AccessKey"><a href="#3-3、创建AccessKey" class="headerlink" title="3.3、创建AccessKey"></a>3.3、创建AccessKey</h4><p>页面右上角，鼠标放在头像处，在弹出的框里选择AccessKey管理，在弹出的选项框里，选择<code>继续使用AccessKey</code>。</p>
<p>进入后，创建一个<code>AccessKey</code>。</p>
<p>在弹出的界面里，记住你的<code>accessKeyId</code>和<code>accessKeySecret</code>。</p>
<h4 id="3-4、了解收费标准"><a href="#3-4、了解收费标准" class="headerlink" title="3.4、了解收费标准"></a>3.4、了解收费标准</h4><p>使用默认的0.12元/1GB/1个月即可。</p>
<h3 id="4、配置PicGo"><a href="#4、配置PicGo" class="headerlink" title="4、配置PicGo"></a>4、配置PicGo</h3><p>我们打开打开PicGo的主界面,在图床设置里面选择阿里云OSS，依照下面注意事项填写信息。</p>
<p>设定Keyld：填写我们在第三步中获得的AccessKeyID</p>
<p>设定KeySecret：填写我们在第三步中获得的AccessKeyIDSecret</p>
<p>设定储存空间名：填写我们在第二步中填写的bucket名称</p>
<p>确认存储区域：填写我们在第二步中查看的地域节点，注意复制的格式：只需要复制oss-cn-Xxxx即可，不需要后面的.aliyuncs.com</p>
<h3 id="5、测试使用"><a href="#5、测试使用" class="headerlink" title="5、测试使用"></a>5、测试使用</h3><p>经过上面的一系列配置之后，我们就完成了Typora的图床配置，现在我们可以使用Markdown开始写文章了，图片、截图会在粘贴之后，自动通过PicGo上传到了远端图床。同时也可以手动将以前在本地存储的图片上传到图床上。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_51808107/article/details/124044961">https://blog.csdn.net/qq_51808107/article/details/124044961</a></p>
]]></content>
      <categories>
        <category>技术总结</category>
      </categories>
  </entry>
  <entry>
    <title>字节暑期实习同组实习生秋招情况分享</title>
    <url>/my-bytedance-internship-friends-offer.html</url>
    <content><![CDATA[<p>突然想起来做这个分享，是因为刚好下午有个字节跳动暑期实习时同组的朋友刚签约三方，和父母也顺便分享了其他同组实习生的签约情况。这边也给大家分享下。</p>
<span id="more"></span>

<p>在字节跳动暑期实习期间，前前后后加上我一共有4名23届实习生。</p>
<p>实习生A：浙大硕，在我们组从4月中干到7月中，走字节的活水平台活水到其他部门继续暑期实习了，未能转正成功，后续情况不清楚。</p>
<p>实习生B：山大硕，多段实习（包括量化，字节多段实习）大佬，7月离职，未参加实习转正，投递字节另一个部门的秋招提前批，最终斩获大sp offer并顺利签约。</p>
<p>实习生C：重邮本，参加本部门实习转正，顺利收到小sp offer并签约。</p>
<p>实习生D：南开硕，由于实习时间短产出不足未能转正成功，秋招收到华为和农行等offer，选择wlb的农行。</p>
<p>实习生E（本人），具体情况可见我的<a href="https://yaxing97.com/2022-autumn-recruitment-summary.html">2022秋招总结</a> 。</p>
<p>这两天看了很多脉脉，有一个评论我觉得说的很对：“很多暑期实习过的人，都不想再去大厂了，选择去国企。”</p>
<p>我觉得说的真的很对，实习过体会了大厂的卷，况且还是实习生，当时我的mentor比我累多了，每天晚上回去还要干活。我每天回到家感觉整个人都被抽空了，虽说我回家的也很早，一般8点左右就润了。到家什么都不想做，更别提学习了。幸好618入手了ps5，靠战神4、瑞奇与叮当、只狼等游戏度过一个又一个夜晚，不然我觉得我可能会抑郁。说实话，如果没有这段暑期实习，我拿到字节等大厂offer可能无脑去了，经历过才知道自己所能承受的身心压力。</p>
<p>因此，暑期实习还是推荐去大厂的，一方面给秋招简历润色，另一方面看看自己是否能适应大厂工作生活节奏。</p>
<p>以上。</p>
]]></content>
      <categories>
        <category>实习秋招</category>
      </categories>
  </entry>
  <entry>
    <title>手把手带你搭建个人博客</title>
    <url>/build-blog.html</url>
    <content><![CDATA[<h2 id="系统环境-amp-工具"><a href="#系统环境-amp-工具" class="headerlink" title="系统环境&工具"></a>系统环境&amp;工具</h2><p>系统环境：MacOS</p>
<p>工具：博客框架为hexo，博客文件托管于GitHub，博客网站用Netlify生成，国内访问采用CloudFlare进行CDN加速</p>
<span id="more"></span>

<h2 id="hexo博客框架安装"><a href="#hexo博客框架安装" class="headerlink" title="hexo博客框架安装"></a>hexo博客框架安装</h2><h3 id="预先环境"><a href="#预先环境" class="headerlink" title="预先环境"></a>预先环境</h3><p>1、安装node（使用homebrew）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>

<p>2、查看版本信息，正常看到版本信息即为成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>3、切换npm的源将源设置为淘宝源（速度快）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config get registry	<span class="comment"># 查看源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org <span class="comment"># 修改为淘宝源</span></span><br></pre></td></tr></table></figure>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1、安装hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g <span class="comment"># 全局安装hexo命令行工具</span></span><br></pre></td></tr></table></figure>

<p>2、初始化博客项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init <span class="string">"博客目录名称"</span></span><br><span class="line"><span class="comment"># hexo init "blog" 即我的博客目录名称为blog，后续都用该目录来讲解</span></span><br></pre></td></tr></table></figure>

<p>3、切换至博客目录安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>4、运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>打开链接，本地出现博客界面，即本地搭建成功！</p>
<h3 id="添加建站脚本"><a href="#添加建站脚本" class="headerlink" title="添加建站脚本"></a>添加建站脚本</h3><p>为了后续<code>netlify</code>建站方便，在<code>package.json</code>里面添加一个命令：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">JSON</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="attr">"scripts"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"build"</span><span class="punctuation">:</span> <span class="string">"hexo generate"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"clean"</span><span class="punctuation">:</span> <span class="string">"hexo clean"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"deploy"</span><span class="punctuation">:</span> <span class="string">"hexo deploy"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"server"</span><span class="punctuation">:</span> <span class="string">"hexo server"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"netlify"</span><span class="punctuation">:</span> <span class="string">"npm run clean &amp;&amp; npm run build"</span> <span class="comment">// 新加行</span></span><br><span class="line">    <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></table></figure>

<h2 id="GitHub托管项目文件"><a href="#GitHub托管项目文件" class="headerlink" title="GitHub托管项目文件"></a>GitHub托管项目文件</h2><p>创建本地仓库，推送到远端服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"my blog first commit"</span></span><br><span class="line">git remote add origin <span class="string">"远端github仓库地址"</span></span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>

<h2 id="Netlify建站"><a href="#Netlify建站" class="headerlink" title="Netlify建站"></a>Netlify建站</h2><p>由于GitHub自带的gitpage访问速度较慢，我们使用Netlify（一个国外的免费的提供静态网站部署服务的平台）将托管 GitHub上的静态网站部署上线。</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1、注册并登陆 Netlify</p>
<p>2、add new site - import an existing project</p>
<p>3、连接到GitHub，选择我们托管在GitHub上的博客项目</p>
<p>4、在设置中注意修改一处，Basic build settings - Build command修改为 <code>npm run netlify</code></p>
<p>5、构建完成可以看到一个 xxx.netlify.app 的url，即为我们博客的url，修改该url中的xxx为yaxing97，即设置我的个人博客域名为<code>yaxing97.netlify.app</code></p>
<h3 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h3><p>1、购买域名（国内国外都可）</p>
<p>2、购买完成后在域名列表找到自己的域名，点击操作中的解析按钮</p>
<p>3、设置域名解析，类型为<code>CNAME</code>，主机记录为<code>@</code>，记录值为<code>yaxing97.netlify.app</code>，其中`yaxing97是之前建站步骤中设置的个性二级域名</p>
<p>4、在netlify中配置域名，domain management - domains - add custom domain，一路通过即可</p>
<h2 id="CloudFlare加速"><a href="#CloudFlare加速" class="headerlink" title="CloudFlare加速"></a>CloudFlare加速</h2><p>Netlify 虽然已经提供了 CDN 加速，但在使用过程中发现国内访问还是比较慢，Cloudflare 相对于国内的七牛云、阿里云等云服务商的 CDN 速度会慢一些，但是它有免费版本，而且最重要的是域名不用备案。</p>
<h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><p>1、注册Cloudflare并登陆</p>
<p>2、输入您的站点（yaxing97.com），点击添加站点</p>
<p>3、选择免费套餐</p>
<p>4、添加DNS，Type为<code>CNAME</code>，Name为<code>yaxing97.com</code>，Content为<code>yaxing97.netlify.app</code></p>
<p>5、使用cloudflare提供的dns解析服务器（Cloudflare Nameservers）对yaxing97.com进行dns解析</p>
<p>6、到阿里云控制台中，DNS管理 - DNS修改，修改DNS服务器</p>
<h2 id="配置https"><a href="#配置https" class="headerlink" title="配置https"></a>配置https</h2><p>回到netlify中，Domain management - HTTPS，点击 verify DNS configuration，结果如下即为配置完成</p>
<p><img src="https://yaxingfang-typora.oss-cn-hangzhou.aliyuncs.com/image-20221212214817015.png" alt="image-20221212214817015"></p>
<h2 id="文章编写"><a href="#文章编写" class="headerlink" title="文章编写"></a>文章编写</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"文章标题"</span></span><br><span class="line"><span class="comment"># 编写好之后</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">git add *</span><br><span class="line">git commit -m <span class="string">"commit信息"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<p>过片刻，访问我们的<code>https://yaxing97.com</code>，可以看到新添加的文章。</p>
<h2 id="参考-amp-更多"><a href="#参考-amp-更多" class="headerlink" title="参考&更多"></a>参考&amp;更多</h2><p><a href="https://blog.cuijiacai.com/blog-building/">https://blog.cuijiacai.com/blog-building/</a></p>
<p><a href="https://www.mdnice.com/writing/382af676baff4ed4ad5511074fb736da">https://www.mdnice.com/writing/382af676baff4ed4ad5511074fb736da</a></p>
]]></content>
      <categories>
        <category>技术总结</category>
      </categories>
  </entry>
</search>
